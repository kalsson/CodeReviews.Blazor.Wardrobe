<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">Wardrobe.API/Wardrobe.API.csproj</projectFile>
    <projectFile profileName="http">Wardrobe.API/Wardrobe.API.csproj</projectFile>
    <projectFile profileName="https">Wardrobe.API/Wardrobe.API.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="23051107-8780-4ed5-bae4-6eeb45b5810f" name="Changes" comment="Add GET endpoint to fetch wardrobe item by ID&#10;&#10;Implemented `GetWardrobeItemById` method in the controller, service, and repository layers to retrieve wardrobe items by ID. Added error handling for non-existent items, returning a 404 response when needed. Improved API functionality and usability.">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.Wardrobe.kalsson/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.Wardrobe.kalsson/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Wardrobe.API/Wardrobe.API.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/Wardrobe.API/Wardrobe.API.csproj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GithubDefaultAccount">
    <option name="defaultAccountId" value="756c21a9-5a16-4405-8c15-d020b01bbe48" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
    <setting file="mock:///AIAssistantSnippet." root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 2
}]]></component>
  <component name="ProjectId" id="2u7G6Hx7FxcAfSr7HAbrMGe0u4L" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.Wardrobe.API: https.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected=".NET Launch Settings Profile.Wardrobe.API: https">
    <configuration name="Wardrobe.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Wardrobe.API/Wardrobe.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Wardrobe.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Wardrobe.API/Wardrobe.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Wardrobe.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Wardrobe.API/Wardrobe.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="1" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <list>
      <item itemvalue=".NET Launch Settings Profile.Wardrobe.API: http" />
      <item itemvalue=".NET Launch Settings Profile.Wardrobe.API: https" />
      <item itemvalue=".NET Launch Settings Profile.Wardrobe.API: IIS Express" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="23051107-8780-4ed5-bae4-6eeb45b5810f" name="Changes" comment="" />
      <created>1720984545897</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1720984545897</updated>
      <workItem from="1741592024594" duration="17923000" />
    </task>
    <task id="LOCAL−00001" summary="Initialize Wardrobe.API project with basic setup.&#10;&#10;Added .NET 8.0 project files, launch settings, example API controller, and an initial WeatherForecast implementation. Included Swagger for API documentation and configured development and production app settings. Project is set up to run locally with IIS Express or via HTTP/HTTPS.">
      <option name="closed" value="true" />
      <created>1741592066562</created>
      <option name="number" value="LOCAL−00001" />
      <option name="presentableId" value="LOCAL−00001" />
      <updated>1741592066562</updated>
    </task>
    <task id="LOCAL−00002" summary="Add Wardrobe.Shared project and integrate it with API&#10;&#10;Introduced a new Wardrobe.Shared project to the solution with .NET 8.0 configuration. Updated Wardrobe.API to reference the shared project and reflect the changes in the solution file. Adjusted RunManager settings to align with the new setup.">
      <option name="closed" value="true" />
      <created>1741592346780</created>
      <option name="number" value="LOCAL−00002" />
      <option name="presentableId" value="LOCAL−00002" />
      <updated>1741592346780</updated>
    </task>
    <task id="LOCAL−00003" summary="Refactor WeatherForecast namespace to Shared.Entities.&#10;&#10;Moved WeatherForecast from Wardrobe.API to Wardrobe.Shared.Entities to better align with shared project structure. Updated WeatherForecastController to reference the new namespace. This change improves code organization and supports modular project architecture.">
      <option name="closed" value="true" />
      <created>1741592413160</created>
      <option name="number" value="LOCAL−00003" />
      <option name="presentableId" value="LOCAL−00003" />
      <updated>1741592413160</updated>
    </task>
    <task id="LOCAL−00004" summary="Remove WeatherForecast API and add WardrobeItem entity.&#10;&#10;The WeatherForecast API and related structures were removed as they are no longer needed. Introduced a new `WardrobeItem` entity to the shared project for better alignment with the application's domain. Updated project files to reflect these changes and ensure proper organization.">
      <option name="closed" value="true" />
      <created>1741593536272</created>
      <option name="number" value="LOCAL−00004" />
      <option name="presentableId" value="LOCAL−00004" />
      <updated>1741593536272</updated>
    </task>
    <task id="LOCAL−00005" summary="Add WardrobeItem API controller and update project dependencies.&#10;&#10;Introduced `WardrobeItemController` with a basic GET endpoint to retrieve a list of mock wardrobe items. Added a new NuGet package reference for `Microsoft.VisualStudio.Web.CodeGeneration.Design` to support scaffolding. Updated project and IDE configurations to align with the new changes.">
      <option name="closed" value="true" />
      <created>1741601542788</created>
      <option name="number" value="LOCAL−00005" />
      <option name="presentableId" value="LOCAL−00005" />
      <updated>1741601542788</updated>
    </task>
    <task id="LOCAL−00006" summary="Add POST endpoint to WardrobeItemController&#10;&#10;Introduced a POST endpoint in `WardrobeItemController` to handle adding new wardrobe items to the collection. Updated project configuration files to reflect changes, ensuring proper alignment with the application's development setup.">
      <option name="closed" value="true" />
      <created>1741601892292</created>
      <option name="number" value="LOCAL−00006" />
      <option name="presentableId" value="LOCAL−00006" />
      <updated>1741601892292</updated>
    </task>
    <task id="LOCAL−00007" summary="Add repository layer to WardrobeItemController&#10;&#10;Introduced `IWardrobeItemRepository` and `WardrobeItemRepository` to manage wardrobe item data. Updated `WardrobeItemController` to use the repository, replacing in-memory data. Registered the repository in the service container for dependency injection.">
      <option name="closed" value="true" />
      <created>1741604053162</created>
      <option name="number" value="LOCAL−00007" />
      <option name="presentableId" value="LOCAL−00007" />
      <updated>1741604053162</updated>
    </task>
    <task id="LOCAL−00008" summary="Add service layer to WardrobeItemController&#10;&#10;Introduced `IWardrobeItemService` and `WardrobeItemService` to decouple business logic from the controller. Updated the controller to use the new service and added Mapster for model mapping. Adjusted dependency injection setup and project files to support these changes.">
      <option name="closed" value="true" />
      <created>1741606387192</created>
      <option name="number" value="LOCAL−00008" />
      <option name="presentableId" value="LOCAL−00008" />
      <updated>1741606387192</updated>
    </task>
    <task id="LOCAL−00009" summary="Add PUT endpoint to update wardrobe items&#10;&#10;Introduced an `UpdateWardrobeItem` method in the service, repository, and controller layers, enabling updates to wardrobe items via a new PUT endpoint. Added a `WardrobeItemUpdateRequest` model to manage update data. Handled cases where the item with the given ID does not exist, returning a 404 response.">
      <option name="closed" value="true" />
      <created>1741608705237</created>
      <option name="number" value="LOCAL−00009" />
      <option name="presentableId" value="LOCAL−00009" />
      <updated>1741608705237</updated>
    </task>
    <task id="LOCAL−00010" summary="Add DELETE endpoint to remove wardrobe items&#10;&#10;Implemented a DELETE endpoint in the controller, along with corresponding service and repository methods, to handle the deletion of wardrobe items by ID. Returns a 404 response if the item is not found. Updated all relevant interfaces and classes to support the new functionality.">
      <option name="closed" value="true" />
      <created>1741617137440</created>
      <option name="number" value="LOCAL−00010" />
      <option name="presentableId" value="LOCAL−00010" />
      <updated>1741617137440</updated>
    </task>
    <task id="LOCAL−00011" summary="Add GET endpoint to fetch wardrobe item by ID&#10;&#10;Introduced a `GetWardrobeItemById` method in the controller, service, and repository layers to enable retrieval of a specific wardrobe item by its ID. Updated relevant interfaces and provided error handling for non-existent items, returning a 404 response when appropriate. Enhanced API functionality and improved usability.">
      <option name="closed" value="true" />
      <created>1741618277775</created>
      <option name="number" value="LOCAL−00011" />
      <option name="presentableId" value="LOCAL−00011" />
      <updated>1741618277775</updated>
    </task>
    <task id="LOCAL−00012" summary="Add EF Core packages to project dependencies&#10;&#10;Included Microsoft.EntityFrameworkCore, related tools, and SQL Server provider to support database interactions. These additions are crucial for enabling Entity Framework Core functionalities in the application.">
      <option name="closed" value="true" />
      <created>1741619320037</created>
      <option name="number" value="LOCAL−00012" />
      <option name="presentableId" value="LOCAL−00012" />
      <updated>1741619320038</updated>
    </task>
    <task id="LOCAL−00013" summary="Add GET endpoint to fetch wardrobe item by ID&#10;&#10;Implemented `GetWardrobeItemById` method in the controller, service, and repository layers to retrieve wardrobe items by ID. Added error handling for non-existent items, returning a 404 response when needed. Improved API functionality and usability.">
      <option name="closed" value="true" />
      <created>1741619327275</created>
      <option name="number" value="LOCAL−00013" />
      <option name="presentableId" value="LOCAL−00013" />
      <updated>1741619327275</updated>
    </task>
    <option name="localTasksCounter" value="14" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Initialize Wardrobe.API project with basic setup.&#10;&#10;Added .NET 8.0 project files, launch settings, example API controller, and an initial WeatherForecast implementation. Included Swagger for API documentation and configured development and production app settings. Project is set up to run locally with IIS Express or via HTTP/HTTPS." />
    <MESSAGE value="Add Wardrobe.Shared project and integrate it with API&#10;&#10;Introduced a new Wardrobe.Shared project to the solution with .NET 8.0 configuration. Updated Wardrobe.API to reference the shared project and reflect the changes in the solution file. Adjusted RunManager settings to align with the new setup." />
    <MESSAGE value="Refactor WeatherForecast namespace to Shared.Entities.&#10;&#10;Moved WeatherForecast from Wardrobe.API to Wardrobe.Shared.Entities to better align with shared project structure. Updated WeatherForecastController to reference the new namespace. This change improves code organization and supports modular project architecture." />
    <MESSAGE value="Remove WeatherForecast API and add WardrobeItem entity.&#10;&#10;The WeatherForecast API and related structures were removed as they are no longer needed. Introduced a new `WardrobeItem` entity to the shared project for better alignment with the application's domain. Updated project files to reflect these changes and ensure proper organization." />
    <MESSAGE value="Add WardrobeItem API controller and update project dependencies.&#10;&#10;Introduced `WardrobeItemController` with a basic GET endpoint to retrieve a list of mock wardrobe items. Added a new NuGet package reference for `Microsoft.VisualStudio.Web.CodeGeneration.Design` to support scaffolding. Updated project and IDE configurations to align with the new changes." />
    <MESSAGE value="Add POST endpoint to WardrobeItemController&#10;&#10;Introduced a POST endpoint in `WardrobeItemController` to handle adding new wardrobe items to the collection. Updated project configuration files to reflect changes, ensuring proper alignment with the application's development setup." />
    <MESSAGE value="Add repository layer to WardrobeItemController&#10;&#10;Introduced `IWardrobeItemRepository` and `WardrobeItemRepository` to manage wardrobe item data. Updated `WardrobeItemController` to use the repository, replacing in-memory data. Registered the repository in the service container for dependency injection." />
    <MESSAGE value="Add service layer to WardrobeItemController&#10;&#10;Introduced `IWardrobeItemService` and `WardrobeItemService` to decouple business logic from the controller. Updated the controller to use the new service and added Mapster for model mapping. Adjusted dependency injection setup and project files to support these changes." />
    <MESSAGE value="Add PUT endpoint to update wardrobe items&#10;&#10;Introduced an `UpdateWardrobeItem` method in the service, repository, and controller layers, enabling updates to wardrobe items via a new PUT endpoint. Added a `WardrobeItemUpdateRequest` model to manage update data. Handled cases where the item with the given ID does not exist, returning a 404 response." />
    <MESSAGE value="Add DELETE endpoint to remove wardrobe items&#10;&#10;Implemented a DELETE endpoint in the controller, along with corresponding service and repository methods, to handle the deletion of wardrobe items by ID. Returns a 404 response if the item is not found. Updated all relevant interfaces and classes to support the new functionality." />
    <MESSAGE value="Add GET endpoint to fetch wardrobe item by ID&#10;&#10;Introduced a `GetWardrobeItemById` method in the controller, service, and repository layers to enable retrieval of a specific wardrobe item by its ID. Updated relevant interfaces and provided error handling for non-existent items, returning a 404 response when appropriate. Enhanced API functionality and improved usability." />
    <MESSAGE value="Add EF Core packages to project dependencies&#10;&#10;Included Microsoft.EntityFrameworkCore, related tools, and SQL Server provider to support database interactions. These additions are crucial for enabling Entity Framework Core functionalities in the application." />
    <MESSAGE value="Add GET endpoint to fetch wardrobe item by ID&#10;&#10;Implemented `GetWardrobeItemById` method in the controller, service, and repository layers to retrieve wardrobe items by ID. Added error handling for non-existent items, returning a 404 response when needed. Improved API functionality and usability." />
    <option name="LAST_COMMIT_MESSAGE" value="" />
  </component>
</project>